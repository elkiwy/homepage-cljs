* What is homepage-cljs?
  
  This is a simple project I made to learn ~Clojurescript~ and ~React~.
  
  The main concept is to be a homepage where I can store and access
  easily all my bookmarks, browse quickly some subreddits, read rss
  feeds, and use other utilities that I'll add in later stages when I find
  something that could be useful to have in a homepage like this.
  
  *Homepage-cljs* can optionally store the user's data on a backend server
  (temporary hosted on a sub-domain of my website), so the user can access to
  its homepage between different computers and devices (I'm already
  working on a mobile client for it called homepage-native with
  Clojurescript and React native).
  
  The project started as a personal one, but then I decided to let it
  available to everyone here on GitHub so anyone can give me feedback,
  study it to learn Clojurescript and React, or simply enjoy it using
  it as a homepage.
  
** What's already in it
   Currently the project has 4 different sections:
   - The favorites page, where you can add bookmarks organized in separate sections and have them all displayed nicely in front of you.
   - The reddit page, where you can add your favorites subreddits and browse the hottest post in that subreddit in a simple and minimal fashion.
   - The rss page, where you can fetch your rss feeds and read them directly in the page.
   - The account page, where you can sign/log in to be able to sync your data with the backend.
  
** What's planned 
   Here are some of the ideas to be developed in the near future (the list can grow any time):
   - A deadline/reminder page where you can add all your deadlines/appointment and have them all displayed ordered by the time distance from now and have a count down for each reminder
   - An improved and extended reddit page where you can read and comment posts
   - A custom host for the backend server in order to use your own trusted server to sync your data 
  
  
   


* Development mode

To start the Figwheel compiler, navigate to the project folder and run the following command in the terminal:

~lein figwheel~

Figwheel will automatically push cljs changes to the browser.
Once Figwheel starts up, you should be able to open the `public/index.html` page in the browser.

* REPL

The project is setup to start nREPL on port `7002` once Figwheel starts.
Once you connect to the nREPL, run `(cljs)` to switch to the ClojureScript REPL.

* Building for production

```
lein clean
lein package
```
