["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$window",["^ ","~$localStorage",["^ ","~$setItem",["^ "],"~$getItem",["^ "]]],"~$Error",["^ "],"~$alert",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$homepage-cljs.app-state","~:imports",null,"~:requires",["^ ","~$reagent.core","^@","~$r","^@","~$rf","~$re-frame.core","~$goog.crypt.base64","^C","~$homepage-cljs.utils","^D","~$reagent.cookies","^E","~$utils","^D","~$b64","^C","~$cljs.reader","^H","~$rfdb","~$re-frame.db","~$reader","^H","~$ru","^E","^J","^J","^B","^B"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$local-storage-set",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/stefanobertoli/Desktop/cljs-reagent/homepage-cljs/src/homepage-cljs/app-state.cljs","~:line",13,"~:column",7,"~:end-line",13,"~:end-column",24,"~:arglists",["~#list",["~$quote",["^Y",[["~$key","~$val"]]]]],"~:doc","Write a value `val` with a key `key` into the localStorage."],"^<","~$homepage-cljs.app-state/local-storage-set","^S","src/homepage-cljs/app-state.cljs","^W",24,"~:method-params",["^Y",[["^[","^10"]]],"~:protocol-impl",null,"~:arglists-meta",["^Y",[null,null]],"^U",1,"~:variadic?",false,"^T",13,"~:ret-tag","~$js","^V",13,"~:max-fixed-arity",2,"~:fn-var",true,"^X",["^Y",["^Z",["^Y",[["^[","^10"]]]]],"^11","Write a value `val` with a key `key` into the localStorage."],"~$app-db",["^ ","^Q",null,"^R",["^ ","^S","/Users/stefanobertoli/Desktop/cljs-reagent/homepage-cljs/src/homepage-cljs/app-state.cljs","^T",23,"^U",7,"^V",23,"^W",13,"^X",["^Y",["^Z",["^Y",[[]]]]],"^11","[TO CLEAN] Gets the current config"],"^<","~$homepage-cljs.app-state/app-db","^S","src/homepage-cljs/app-state.cljs","^W",13,"^13",["^Y",[[]]],"^14",null,"^15",["^Y",[null,null]],"^U",1,"^16",false,"^T",23,"^17","~$any","^V",23,"^19",0,"^1:",true,"^X",["^Y",["^Z",["^Y",[[]]]]],"^11","[TO CLEAN] Gets the current config"],"~$load-state",["^ ","^Q",null,"^R",["^ ","^S","/Users/stefanobertoli/Desktop/cljs-reagent/homepage-cljs/src/homepage-cljs/app-state.cljs","^T",37,"^U",7,"^V",37,"^W",17,"^X",["^Y",["^Z",["^Y",[[]]]]],"^11","Loads the config stored in the localStorage or initialize it."],"^<","~$homepage-cljs.app-state/load-state","^S","src/homepage-cljs/app-state.cljs","^W",17,"^13",["^Y",[[]]],"^14",null,"^15",["^Y",[null,null]],"^U",1,"^16",false,"^T",37,"^17","^1=","^V",37,"^19",0,"^1:",true,"^X",["^Y",["^Z",["^Y",[[]]]]],"^11","Loads the config stored in the localStorage or initialize it."],"~$in-vector?",["^ ","^Q",null,"^R",["^ ","^S","/Users/stefanobertoli/Desktop/cljs-reagent/homepage-cljs/src/homepage-cljs/app-state.cljs","^T",60,"^U",7,"^V",60,"^W",17,"^X",["^Y",["^Z",["^Y",[["~$v","~$item"]]]]],"^11","Checks if an `item` is inside the vector `v`."],"^<","~$homepage-cljs.app-state/in-vector?","^S","src/homepage-cljs/app-state.cljs","^W",17,"^13",["^Y",[["~$v","^1A"]]],"^14",null,"^15",["^Y",[null,null]],"^U",1,"^16",false,"^T",60,"^17","~$boolean","^V",60,"^19",2,"^1:",true,"^X",["^Y",["^Z",["^Y",[["~$v","^1A"]]]]],"^11","Checks if an `item` is inside the vector `v`."],"~$alert-and-return",["^ ","^Q",null,"^R",["^ ","^S","/Users/stefanobertoli/Desktop/cljs-reagent/homepage-cljs/src/homepage-cljs/app-state.cljs","^T",65,"^U",7,"^V",65,"^W",23,"^X",["^Y",["^Z",["^Y",[["~$message","~$db"]]]]],"^11","Shows an alert and returns the `db`."],"^<","~$homepage-cljs.app-state/alert-and-return","^S","src/homepage-cljs/app-state.cljs","^W",23,"^13",["^Y",[["^1E","^1F"]]],"^14",null,"^15",["^Y",[null,null]],"^U",1,"^16",false,"^T",65,"^V",65,"^19",2,"^1:",true,"^X",["^Y",["^Z",["^Y",[["^1E","^1F"]]]]],"^11","Shows an alert and returns the `db`."],"~$update-db-and-save",["^ ","^Q",null,"^R",["^ ","^S","/Users/stefanobertoli/Desktop/cljs-reagent/homepage-cljs/src/homepage-cljs/app-state.cljs","^T",46,"^U",7,"^V",46,"^W",25,"^X",["^Y",["^Z",["^Y",[["~$sync","~$fn"]]]]],"^11","Executes a function, and return the result after sending the new config to the backend if the `sync` flag is active"],"^<","~$homepage-cljs.app-state/update-db-and-save","^S","src/homepage-cljs/app-state.cljs","^W",25,"^13",["^Y",[["^1I","^1J"]]],"^14",null,"^15",["^Y",[null,null]],"^U",1,"^16",false,"^T",46,"^17","^1=","^V",46,"^19",2,"^1:",true,"^X",["^Y",["^Z",["^Y",[["^1I","^1J"]]]]],"^11","Executes a function, and return the result after sending the new config to the backend if the `sync` flag is active"],"~$local-storage-get",["^ ","^Q",null,"^R",["^ ","^S","/Users/stefanobertoli/Desktop/cljs-reagent/homepage-cljs/src/homepage-cljs/app-state.cljs","^T",18,"^U",7,"^V",18,"^W",24,"^X",["^Y",["^Z",["^Y",[["^["]]]]],"^11","Retrieve a value with a key `key` from the localStorage."],"^<","~$homepage-cljs.app-state/local-storage-get","^S","src/homepage-cljs/app-state.cljs","^W",24,"^13",["^Y",[["^["]]],"^14",null,"^15",["^Y",[null,null]],"^U",1,"^16",false,"^T",18,"^17","^18","^V",18,"^19",1,"^1:",true,"^X",["^Y",["^Z",["^Y",[["^["]]]]],"^11","Retrieve a value with a key `key` from the localStorage."],"~$get-categories-names",["^ ","^Q",null,"^R",["^ ","^S","/Users/stefanobertoli/Desktop/cljs-reagent/homepage-cljs/src/homepage-cljs/app-state.cljs","^T",55,"^U",7,"^V",55,"^W",27,"^X",["^Y",["^Z",["^Y",[["^1F"]]]]],"^11","[TO CLEAN] Retrieves the categories vector from a `db`."],"^<","~$homepage-cljs.app-state/get-categories-names","^S","src/homepage-cljs/app-state.cljs","^W",27,"^13",["^Y",[["^1F"]]],"^14",null,"^15",["^Y",[null,null]],"^U",1,"^16",false,"^T",55,"^17","~$clj","^V",55,"^19",1,"^1:",true,"^X",["^Y",["^Z",["^Y",[["^1F"]]]]],"^11","[TO CLEAN] Retrieves the categories vector from a `db`."],"~$save-state",["^ ","^Q",null,"^R",["^ ","^S","/Users/stefanobertoli/Desktop/cljs-reagent/homepage-cljs/src/homepage-cljs/app-state.cljs","^T",28,"^U",7,"^V",28,"^W",17,"^X",["^Y",["^Z",["^Y",[[],["~$data"]]]]],"^11","Saves the config into the localStorage.","~:top-fn",["^ ","^16",false,"~:fixed-arity",1,"^19",1,"^13",["^Y",[[],["^1R"]]],"^X",["^Y",[[],["^1R"]]],"^15",["^Y",[null,null]]]],"^<","~$homepage-cljs.app-state/save-state","^S","src/homepage-cljs/app-state.cljs","^W",17,"^1S",["^ ","^16",false,"^1T",1,"^19",1,"^13",["^Y",[[],["^1R"]]],"^X",["^Y",[[],["^1R"]]],"^15",["^Y",[null,null]]],"^13",["^Y",[[],["^1R"]]],"^14",null,"^1T",1,"^15",["^Y",[null,null]],"^U",1,"^16",false,"~:methods",[["^ ","^1T",0,"^16",false,"~:tag","^1="],["^ ","^1T",1,"^16",false,"^1W",["^;",["^18","~$clj-nil"]]]],"^T",28,"^V",28,"^19",1,"^1:",true,"^X",["^Y",[[],["^1R"]]],"^11","Saves the config into the localStorage."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^K","^H","^H","^H","~$r","^@","^@","^@"],"~:cljs.analyzer/constants",["^ ","~:seen",["^;",["~:favorite2-link-removed","~:rss-selected-name","~:selected","~:favorites2-categories","~:else","~:<-","~:favorites","^<","~:page-current","~:reddit-selected-changed","~:rss","~:reddit-removed-subreddit","~:sync","~:account-updated","~:favorite2-category-added","~:favorite2-link-added","~:reddit-added-subreddit","~:account","~:reddit-selected","~:initialize","~:rss-removed","~:feeds","~:categories","~:rss-added","~:link","~:rss-selected-changed","~:favorite2-categories-swapped","~:replace-db-no-sync","~:reddit-subreddits","~:order","~:page-changed","~:pass","~:rss-feeds","~:favorite2-category-removed","~:Favorites","~:favorites2-category-links","~:replace-db","~:subreddits","~:links","~:app-db","~:rss-selected-url","~:reddit"]],"^2M",["^28","^2T","^2C","^<","^27","^2F","^2W","^2A","^24","^2S","^2V","^2L","^2U","^2Y","^2B","^23","^2P","^2:","^2E","^22","^2X","^26","^2R","^2O","^2<","^2K","^2N","^2=","^2>","^25","^2M","^2?","^2H","^2Q","^21","^2J","^29","^2@","^2;","^2I","^2G","^2D"]],"^11",null]