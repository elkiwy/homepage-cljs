["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Object",["^ "]],"~:use-macros",["^ ","~$go","~$cljs.core.async.macros"],"~:excludes",["~#set",[]],"~:name","~$homepage-cljs.account","~:imports",null,"~:requires",["^ ","~$reagent.core","^=","~$r","^=","~$rf","~$re-frame.core","~$goog.crypt.base64","^@","~$cljs-http.client","^A","~$homepage-cljs.ui","^B","~$cljs.core.async","^C","~$homepage-cljs.style","^D","~$homepage-cljs.utils","^E","~$reagent.cookies","^F","~$style","^D","~$ui","^B","~$utils","^E","~$b64","^@","~$cljs.reader","^K","~$rfdb","~$re-frame.db","~$reader","^K","~$ru","^F","~$http","^A","^M","^M","^?","^?"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$<!","^C"],"~:defs",["^ ","~$account-without-account",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/stefanobertoli/Desktop/cljs-reagent/homepage-cljs/src/homepage-cljs/account.cljs","~:line",139,"~:column",7,"~:end-line",139,"~:end-column",30,"~:arglists",["~#list",["~$quote",["^12",[["~$account","~$logAtom"]]]]],"~:doc","Displays the elements for when the app doesn't have a cloud config."],"^9","~$homepage-cljs.account/account-without-account","^X","src/homepage-cljs/account.cljs","^10",30,"~:method-params",["^12",[["^14","^15"]]],"~:protocol-impl",null,"~:arglists-meta",["^12",[null,null]],"^Z",1,"~:variadic?",false,"^Y",139,"~:ret-tag","~$function","^[",139,"~:max-fixed-arity",2,"~:fn-var",true,"^11",["^12",["^13",["^12",[["^14","^15"]]]]],"^16","Displays the elements for when the app doesn't have a cloud config."],"~$backend-post-request",["^ ","^V",null,"^W",["^ ","^X","/Users/stefanobertoli/Desktop/cljs-reagent/homepage-cljs/src/homepage-cljs/account.cljs","^Y",43,"^Z",7,"^[",43,"^10",27,"^11",["^12",["^13",["^12",[["~$endpoint","~$queryParamsData","~$postBodyData","~$callback"]]]]],"^16","Create and send a POST request to a backend endpoint and trigger a callback.\n     Takes an `endpoint` as string, some `queryParamsdata` and `postBodydata` as maps, and a `callback` as a function."],"^9","~$homepage-cljs.account/backend-post-request","^X","src/homepage-cljs/account.cljs","^10",27,"^18",["^12",[["^1A","^1B","^1C","^1D"]]],"^19",null,"^1:",["^12",[null,null]],"^Z",1,"^1;",false,"^Y",43,"^1<","~$any","^[",43,"^1>",4,"^1?",true,"^11",["^12",["^13",["^12",[["^1A","^1B","^1C","^1D"]]]]],"^16","Create and send a POST request to a backend endpoint and trigger a callback.\n     Takes an `endpoint` as string, some `queryParamsdata` and `postBodydata` as maps, and a `callback` as a function."],"~$account-main",["^ ","^V",null,"^W",["^ ","^X","/Users/stefanobertoli/Desktop/cljs-reagent/homepage-cljs/src/homepage-cljs/account.cljs","^Y",170,"^Z",7,"^[",170,"^10",19,"^11",["^12",["^13",["^12",[[]]]]],"^16","Root of the account view, this will get called by core.cljs."],"^9","~$homepage-cljs.account/account-main","^X","src/homepage-cljs/account.cljs","^10",19,"^18",["^12",[[]]],"^19",null,"^1:",["^12",[null,null]],"^Z",1,"^1;",false,"^Y",170,"^1<","^1=","^[",170,"^1>",0,"^1?",true,"^11",["^12",["^13",["^12",[[]]]]],"^16","Root of the account view, this will get called by core.cljs."],"~$updateConfig",["^ ","^V",null,"^W",["^ ","^X","/Users/stefanobertoli/Desktop/cljs-reagent/homepage-cljs/src/homepage-cljs/account.cljs","^Y",99,"^Z",7,"^[",99,"^10",19,"^11",["^12",["^13",["^12",[["~$updated-db"]]]]],"^16","Updates the config on the cloud with a newer app config.\n     Reads the user credentials from the current loaded app config.\n     Takes a `updated-db` as an app data map."],"^9","~$homepage-cljs.account/updateConfig","^X","src/homepage-cljs/account.cljs","^10",19,"^18",["^12",[["^1J"]]],"^19",null,"^1:",["^12",[null,null]],"^Z",1,"^1;",false,"^Y",99,"^1<",["^8",["^1F","~$clj-nil"]],"^[",99,"^1>",1,"^1?",true,"^11",["^12",["^13",["^12",[["^1J"]]]]],"^16","Updates the config on the cloud with a newer app config.\n     Reads the user credentials from the current loaded app config.\n     Takes a `updated-db` as an app data map."],"~$pack-query-parameters",["^ ","^V",null,"^W",["^ ","^X","/Users/stefanobertoli/Desktop/cljs-reagent/homepage-cljs/src/homepage-cljs/account.cljs","^Y",30,"^Z",7,"^[",30,"^10",28,"^11",["^12",["^13",["^12",[["~$data"]]]]],"^16","Create the query parameters string with the data inside the `data` map."],"^9","~$homepage-cljs.account/pack-query-parameters","^X","src/homepage-cljs/account.cljs","^10",28,"^18",["^12",[["^1N"]]],"^19",null,"^1:",["^12",[null,null]],"^Z",1,"^1;",false,"^Y",30,"^1<","^1F","^[",30,"^1>",1,"^1?",true,"^11",["^12",["^13",["^12",[["^1N"]]]]],"^16","Create the query parameters string with the data inside the `data` map."],"~$agent",["^ ","^9","~$homepage-cljs.account/agent","^X","src/homepage-cljs/account.cljs","^Y",23,"^Z",1,"^[",23,"^10",11,"^W",["^ ","^X","/Users/stefanobertoli/Desktop/cljs-reagent/homepage-cljs/src/homepage-cljs/account.cljs","^Y",23,"^Z",6,"^[",23,"^10",11],"~:tag","~$string"],"~$base-url",["^ ","^9","~$homepage-cljs.account/base-url","^X","src/homepage-cljs/account.cljs","^Y",20,"^Z",1,"^[",20,"^10",14,"^W",["^ ","^X","/Users/stefanobertoli/Desktop/cljs-reagent/homepage-cljs/src/homepage-cljs/account.cljs","^Y",20,"^Z",6,"^[",20,"^10",14],"^1R","^1S"],"~$getConfig",["^ ","^V",null,"^W",["^ ","^X","/Users/stefanobertoli/Desktop/cljs-reagent/homepage-cljs/src/homepage-cljs/account.cljs","^Y",58,"^Z",7,"^[",58,"^10",16,"^11",["^12",["^13",["^12",[["~$usr","~$psw","^15"]]]]],"^16","Retrieve a user's config from the cloud and replace the current app data with it.\n     Takes a `usr` and `psw` as strings and a `logAtom` as an optional atom to log the response."],"^9","~$homepage-cljs.account/getConfig","^X","src/homepage-cljs/account.cljs","^10",16,"^18",["^12",[["^1W","^1X","^15"]]],"^19",null,"^1:",["^12",[null,null]],"^Z",1,"^1;",false,"^Y",58,"^1<","^1F","^[",58,"^1>",3,"^1?",true,"^11",["^12",["^13",["^12",[["^1W","^1X","^15"]]]]],"^16","Retrieve a user's config from the cloud and replace the current app data with it.\n     Takes a `usr` and `psw` as strings and a `logAtom` as an optional atom to log the response."],"~$addConfig",["^ ","^V",null,"^W",["^ ","^X","/Users/stefanobertoli/Desktop/cljs-reagent/homepage-cljs/src/homepage-cljs/account.cljs","^Y",77,"^Z",7,"^[",77,"^10",16,"^11",["^12",["^13",["^12",[["^1W","^1X","^15","~$targetDb"]]]]],"^16","Post the current app data to the cloud.\n     Takes a `usr` and `psw` as strings, a `logAtom` as an optional atom to log the response,\n     and a `targetDb` as optional app-data to send to the cloud instead of the current loaded one."],"^9","~$homepage-cljs.account/addConfig","^X","src/homepage-cljs/account.cljs","^10",16,"^18",["^12",[["^1W","^1X","^15","^1["]]],"^19",null,"^1:",["^12",[null,null]],"^Z",1,"^1;",false,"^Y",77,"^1<","^1F","^[",77,"^1>",4,"^1?",true,"^11",["^12",["^13",["^12",[["^1W","^1X","^15","^1["]]]]],"^16","Post the current app data to the cloud.\n     Takes a `usr` and `psw` as strings, a `logAtom` as an optional atom to log the response,\n     and a `targetDb` as optional app-data to send to the cloud instead of the current loaded one."],"~$getUserConfig-endpoint",["^ ","^9","~$homepage-cljs.account/getUserConfig-endpoint","^X","src/homepage-cljs/account.cljs","^Y",21,"^Z",1,"^[",21,"^10",28,"^W",["^ ","^X","/Users/stefanobertoli/Desktop/cljs-reagent/homepage-cljs/src/homepage-cljs/account.cljs","^Y",21,"^Z",6,"^[",21,"^10",28],"^1R","^1S"],"~$addUserConfig-endpoint",["^ ","^9","~$homepage-cljs.account/addUserConfig-endpoint","^X","src/homepage-cljs/account.cljs","^Y",22,"^Z",1,"^[",22,"^10",28,"^W",["^ ","^X","/Users/stefanobertoli/Desktop/cljs-reagent/homepage-cljs/src/homepage-cljs/account.cljs","^Y",22,"^Z",6,"^[",22,"^10",28],"^1R","^1S"],"~$try-download-state",["^ ","^V",null,"^W",["^ ","^X","/Users/stefanobertoli/Desktop/cljs-reagent/homepage-cljs/src/homepage-cljs/account.cljs","^Y",110,"^Z",7,"^[",110,"^10",25,"^11",["^12",["^13",["^12",[[]]]]],"^16","Tries to download a user config from the cloud,\n     if successful replaces the current config with the one downloaded.\n     Reads the user credentials from the current loaded app config."],"^9","~$homepage-cljs.account/try-download-state","^X","src/homepage-cljs/account.cljs","^10",25,"^18",["^12",[[]]],"^19",null,"^1:",["^12",[null,null]],"^Z",1,"^1;",false,"^Y",110,"^1<",["^8",["^1F","^1L"]],"^[",110,"^1>",0,"^1?",true,"^11",["^12",["^13",["^12",[[]]]]],"^16","Tries to download a user config from the cloud,\n     if successful replaces the current config with the one downloaded.\n     Reads the user credentials from the current loaded app config."],"~$account-with-account",["^ ","^V",null,"^W",["^ ","^X","/Users/stefanobertoli/Desktop/cljs-reagent/homepage-cljs/src/homepage-cljs/account.cljs","^Y",124,"^Z",7,"^[",124,"^10",27,"^11",["^12",["^13",["^12",[["^14","^15"]]]]],"^16","Displays the elements for when the app has a valid cloud config with a username."],"^9","~$homepage-cljs.account/account-with-account","^X","src/homepage-cljs/account.cljs","^10",27,"^18",["^12",[["^14","^15"]]],"^19",null,"^1:",["^12",[null,null]],"^Z",1,"^1;",false,"^Y",124,"^1<","^1=","^[",124,"^1>",2,"^1?",true,"^11",["^12",["^13",["^12",[["^14","^15"]]]]],"^16","Displays the elements for when the app has a valid cloud config with a username."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^6","^6","^N","^K","^K","^K","~$r","^=","^=","^=","^C","^C"],"~:cljs.analyzer/constants",["^ ","~:seen",["^8",["~:line-height","~:json-params","~:color","~:text-align","~:else","~:font-size","~:config","~:password","^9","~:width","~:recur","~:agent","~:sync","~:account-updated","~:account","~:style","~:div","~:initialize","~:with-credentials?","~:class","~:Account","~:padding","~:justify-content","~:code","~:display","~:page-changed","~:pass","~:body","~:replace-db","~:user","~:p","~:flex-direction","~:margin","~:data"]],"~:order",["^2G","^2>","^2N","^2W","^2F","^2A","^2Y","^2D","^2S","^2C","^30","^2X","^2I","^2J","^9","^2V","^2H","^2L","^2K","^2T","^2Z","^2R","^2?","^2B","^2E","^2[","^2M","^2U","^2P","^2Q","~:p","^2O","^2@","^2="]],"^16",null]